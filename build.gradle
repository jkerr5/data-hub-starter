buildscript {
}

plugins {
  // Gradle Properties plugin
  id 'net.saliman.properties' version '1.4.6'

  // Data Hub plugin
  id 'com.marklogic.ml-data-hub' version '5.1.0'

  id 'java'
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()

  // Needed for some mlcp dependencies, such as commons-csv:1.5.1-marklogic
  maven { url "http://developer.marklogic.com/maven2/" }
}

configurations {
  mlcp
}

dependencies {
  mlcp "com.marklogic:mlcp:9.0.11"

  /**
  * mlcp uses Log4j for logging, and if Log4j can't find a configuration file, it will complain and you'll
  * get none of mlcp's usually-useful logging. It is recommended then that your Gradle configuration for
  * mlcp include a directory or some other resource that provides a log4j.properties file.
  */
  mlcp files("lib")

  compile group: 'com.marklogic', name: 'marklogic-client-api', version: '5.2.0'
}

task loadMoviesJson(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlFinalPort.toInteger()
  ssl = sslFlag.toBoolean()
  username = mlUsername
  password = mlPassword
  input_file_path = "data/movies-json"
  input_file_type = "documents"
  document_type = "json"
  output_collections = "movies-json"

  // URI will be relative to the data/ directory
  output_uri_replace = "${rootProject.projectDir.absolutePath}/data,''"
  //output_uri_prefix = ""
  //output_uri_suffix = ""

  output_permissions = "endpointUser,read,endpointUser,update"
}

task loadMoviesXml(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlFinalPort.toInteger()
  ssl = sslFlag.toBoolean()
  username = mlUsername
  password = mlPassword
  input_file_path = "data/movies-xml"
  input_file_type = "documents"
  document_type = "xml"
  output_collections = "movies-xml"

  // URI will be relative to the data/ directory
  output_uri_replace = "${rootProject.projectDir.absolutePath}/data,''"
  //output_uri_prefix = ""
  //output_uri_suffix = ""

  output_permissions = "endpointUser,read,endpointUser,update"
}
